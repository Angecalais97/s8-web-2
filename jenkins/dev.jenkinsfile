pipeline {
    agent any
    
    triggers {
        githubPush()
    }
    options {
        timeout(time: 1, unit: 'MINUTES') // Timeout for the entire pipeline
        // buildDiscarder(logRotator(numToKeepStr: '10')) // Discard old builds to save disk space
        // disableConcurrentBuilds() // Ensures that only one build can run at a time
        // timestamps() // Adds timestamps to the console output
        // skipDefaultCheckout() // Skips the default checkout of source code, useful if you're doing a custom checkout
        // retry(3) // Automatically retries the entire pipeline up to 3 times if it fails
        // quietPeriod(5) // Sets a quiet period before starting a build after a new commit is pushed
    }
    environment {
        DOCKER_HUB_USERNAME="devopseasylearning"
        ALPHA_APPLICATION_01_REPO="alpha-application-01"
        ALPHA_APPLICATION_02_REPO="alpha-application-02"
        DOCKER_CREDENTIAL_ID = 's8-test-docker-hub-auth'
    }
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 's8tia', description: '')
        string(name: 'APP1_TAG', defaultValue: 'latest', description: '')
        string(name: 'APP2_TAG', defaultValue: 'latest', description: '')
        string(name: 'PORT_ON_DOCKER_HOST', defaultValue: '', description: '')
    }
    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git credentialsId: 'jenkins-ssh-agents-private-key',
                        url: 'git@github.com:DEL-ORG/s8-web-2.git',
                        branch: "${params.BRANCH_NAME}"
                }
            }
        }
        stage('Testing the trigger1') {
            steps {
                script {
                    customFunction()
                }
            }
        }
        stage('Testing the trigger2') {
            steps {
                script {
                    customFunction()
                }
            }
        }
        stage('Test timeout') {
            steps {
                script {
                    sleep 120s
                }
            }
        }
    }
}

def customFunction() {
    sh """
        ls -l
        pwd
        uptime
    """
}
